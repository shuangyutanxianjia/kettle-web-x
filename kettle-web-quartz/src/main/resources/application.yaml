server:
  port: 8076
spring:
  application:
    name: kettle-web-quartz
  datasource:
    name: mysql_test
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/quartz?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
    username: root
    password: root

#    druid:
#      filters: stat
#      driver-class-name: com.mysql.jdbc.Driver
#      url: jdbc:mysql://localhost:3306/quartz?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
#      username: root
#      password: root
#      initial-size: 1
#      min-idle: 1
#      max-active: 20
#      max-wait: 60000
#      time-between-eviction-runs-millis: 60000
#      min-evictable-idle-time-millis: 300000
#      validation-query: SELECT 'x'
#      test-while-idle: true
#      test-on-borrow: false
#      test-on-return: false
#      pool-prepared-statements: false
#      max-pool-prepared-statement-per-connection-size: 20

#mybatis:
#  mapper-locations: classpath:mapper/*.xml
#  type-aliases-package: com.example.demo.model

#pagehelper
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
  returnPageInfo: check

eureka:
  instance:
    hostname: localhost
    prefer-ip-address: true
    instance-id: ${eureka.instance.hostname}:${server.port}
  client:
    service-url:
      defaultZone: http://localhost:8080/eureka/

quartz:
  job-store-type: jdbc
  jdbc.initialize-schema: NEVER
  properties:
    org:
      quartz:
        scheduler:
          instanceId: AUTO
          instanceName: clusteredScheduler
        jobStore:
          useProperties: false
          tablePrefix: qrtz_
          class: org.quartz.impl.jdbcjobstore.JobStoreTX
          driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
          isClustered: true
          clusterCheckinInterval: 10000
        threadPool:
          class: org.quartz.simpl.SimpleThreadPool
          threadCount: 5
          threadPriority: 5
          threadsInheritContextClassLoaderOfInitializingThread: true